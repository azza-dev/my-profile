name: Deploy to Staging

on:
  push:
    branches:
      - main  # D√©ploiement √† chaque push sur main

env:
  DEPLOY_ENV: staging
  MAINTAINER_NAME: "Azza Dev"
  MAINTAINER_EMAIL: "azzabensalem8@gmail.com"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: ‚úÖ Run tests
        run: npm test

  deploy:
    name: üöÄ Deploy to Staging
    runs-on: ubuntu-latest
    needs: test  # Ce job ne s‚Äôex√©cute que si les tests passent

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîß Build the project
        run: npm run build

      - name: üì° Deploy to staging server
        env:
          SERVER: ${{ secrets.STAGING_SERVER }}
          USER: ${{ secrets.SSH_USER }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "D√©ploiement en cours vers $SERVER..."
          mkdir -p logs
          echo "D√©ploiement r√©ussi !" > logs/deploy.log
          # Exemple : scp -i $KEY -r dist/* $USER@$SERVER:/var/www/staging/

      - name: üì§ Upload deploy logs
        uses: actions/upload-artifact@v3
        with:
          name: deploy-logs
          path: logs/deploy.log

      - name: ‚ÑπÔ∏è Afficher les coordonn√©es
        run: |
          echo "------------------------"
          echo "üë§ Coordonn√©es du mainteneur"
          echo "Nom      : $MAINTAINER_NAME"
          echo "Email    : $MAINTAINER_EMAIL"
          echo "T√©l√©phone: +21642201428"
          echo "Ville    : Monastir"
          echo "LinkedIn : linkedin.com/in/azza-dev"
          echo "------------------------"

      # Optionnel : Notification Slack (n√©cessite configuration du secret SLACK_WEBHOOK_URL)
      - name: üîî Slack Notification
        if: success()
        uses: Ilshidur/action-slack@v2
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: "‚úÖ D√©ploiement termin√© avec succ√®s pour Azza Dev sur *staging* !"

